[tool.poetry]
name = "opsml-artifacts"
version = "0.2.2"
description = "Package for handling data for machine learning projects"
authors = ["Thorrester <48217609+thorrester@users.noreply.github.com>"]

[tool.poetry.dependencies]
python = ">=3.8,<=3.11"
cloud-sql-python-connector = {extras = ["pymysql"], version = "^0.8.1"}
google-cloud-secret-manager ="^2.12.2"
google-auth = "1.35.0"
google-cloud-storage = "1.44.0"
sqlalchemy = {extras = ["mypy"], version = "^1.4.46"}
numpy = ">=1.21.6,<=1.24.1"
pandas = ">=1.4.0,<=1.5.3"
pyarrow = "8.0.0"
pydantic = ">=1.10.0, <=1.10.4"
gcsfs = "^2022.11.0"
altair = "^4.2.0"
scikit-learn = ">=1.0"
pydantic-yaml = "^0.9.0"
skl2onnx = "^1.13"
onnx = "^1.12.0"
onnxruntime = "^1.13.1"
onnxmltools = "^1.11.1"
tf2onnx = "^1.13.0"
pyshipt-sql = "^1.2.7"
google-cloud-scheduler = "^2.9.0"
zarr = ">2.12.0"
graphviz = "^0.20.1"
cryptography = ">=39.0.1"


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest-lazy-fixture = "^0.6.3"
ruff = "^0.0.242"
altair-viewer = "^0.4.0"
sqlalchemy-stubs = "^0.4"
types-pymysql = "^1.0.19.1"
types-requests = "^2.28.11.7"
pytest-cov = "^3.0.0"
black = "22.3.0"
pytest = "^7.1.2"
flake8 = "^4.0.1"
pylint = "^2.14.5"
isort = "^5.10.1"
sqlalchemy2-stubs = "0.0.2a31"
coverage = {extras = ["toml"], version = "^6.5.0"}
mypy = "^0.991"
lightgbm = "^3.3.3"
xgboost = "^1.7.1"
types-protobuf = "^4.21.0.3"
pytest-env = "^0.8.1"

[tool.poetry.group.dev-tf]
optional = true

[tool.poetry.group.dev-tf.dependencies]
tensorflow = "2.10.1"


[tool.poetry.group.dev-pytorch.dependencies]
torch = "^1.13.1"
torchvision = "^0.14.1"

[tool.isort]
profile = "black"

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'

[tool.pylint.MASTER]
ignore-paths = [ "opsml_artifacts/.local_tests/*"]

[tool.pylint.messages_control]
max-line-length = 120
disable = [
    "too-few-public-methods",
    "design",
    "duplicate-code",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "too-many-nested-blocks",
    "unused-argument",
]
extension-pkg-whitelist = [
    "pydantic"
]

[tool.flake8]
# This section is just a doc placeholder..see setup.cfg
max-complexity = 10
format = "pylint"
statistics = "True"
max-line-length = 120
# ignore non-PEP8 lints
ignore = ["E203", "W503"]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
testpaths = ["tests"]

[tool.mypy]
# platform configuration
python_version = "3.9"
platform = "linux"
mypy_path = "stubs"
ignore_missing_imports = true
plugins = [
    "numpy.typing.mypy_plugin",
    "pydantic.mypy",
    "sqlalchemy.ext.mypy.plugin",
    "sqlmypy",
]
exclude = "opsml_artifacts/.local_tests/*"


[tool.coverage.paths]
source = ["opsml_artifacts", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["opsml_artifacts"]

[tool.coverage.report]
show_missing = true
fail_under = 60


[tool.ruff]
line-length = 120

# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F"]
ignore = []

# Exclude a variety of commonly ignored directories.
exclude = [
    "tests/",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.9.
target-version = "py39"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[build-system]
requires = ["poetry-core>=1.2.2"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
# Access Shipt's private Artifactory remote PyPi repository. It serves as a caching proxy.
# Generate Identity Token in Artifactory and use it as password and then have these ENV's set:
# export POETRY_HTTP_BASIC_SHIPT_RESOLVE_USERNAME=${ARTIFACTORY_PYPI_USERNAME}
# export POETRY_HTTP_BASIC_SHIPT_RESOLVE_PASSWORD=${ARTIFACTORY_PYPI_PASSWORD}
name = "shipt-resolve"
url = "https://artifactory.shipt.com/artifactory/api/pypi/pypi-virtual/simple"
default = true