[tool.poetry]
name = "opsml"
version = "0.3.1"
description = "Package for creating, tracking, storing and versioning machine learning artifacts"
authors = ["Thorrester <48217609+thorrester@users.noreply.github.com>"]

[tool.poetry.dependencies]

# required dependencies

python = ">=3.9,<=3.11"
alembic = "^1.10.3"
altair = "^4.2.0"
cryptography = "^39.0.1"
httpx ="^0.23.3"
numpy = ">=1.21.6,<=1.24.1"
onnx = "<1.14.0"
onnxmltools = "^1.11.1"
onnxruntime = "^1.13.0"
pandas = ">=1.4.0,<=1.5.3"
pyarrow = ">=8.0.0"
pydantic = ">=1.10.0, <=1.10.4"
python-json-logger = "^2.0.6"
scikit-learn = ">=1.0"
semver = "2.13.0"
skl2onnx = "^1.13"
sqlalchemy = {extras = ["mypy"], version = "^1.4.46"}
tenacity = "^8.2.2"
tf2onnx ="^1.13.0"
zarr = ">2.12.0"

# optional dependencies for sql
psycopg2 = {version="^2.9.6", optional = true}

# optional dependencies for server
fastapi = {version="^0.92.0", optional = true}
gunicorn = {version="^20.1.0", optional = true}
libclang = {version="<=15.0.6.1", optional=true}
llvmlite = {version="^0.39.1", optional=true}
mlflow = {version="^2.3.1", optional=true}
numba = {version="^0.56.0", optional=true}
prometheus-fastapi-instrumentator = {version="^5.8.1", optional = true}
rollbar = {version="^0.16.3", optional = true}
uvicorn = {version="^0.20.0", optional = true}
wsgi-basic-auth = {version="^1.1.0", optional = true}
streaming-form-data = {version="^1.11.0", optional = true}

# optional dependency for seldon
seldon-core = {version="^1.16.0", optional = true}

# optional dependencies for cloud-sql
cloud-sql-python-connector = {version="^1.2.0", optional = true}
pg8000 = {version="^1.29.4", optional = true}
pymysql = {version="^1.0.2", optional = true}

# optional dep for visualization
graphviz = {version="^0.20.1", optional = true}

[tool.poetry.extras]
server = ["streaming-form-data", "fastapi", "uvicorn", "rollbar", "gunicorn", "prometheus-fastapi-instrumentator", "wsgi-basic-auth", "mlflow", "libclang", "llvmlite", "numba"]
mlflow = ["mlflow", "libclang", "llvmlite", "numba"]
graphviz = ["graphviz"]
gcp_mysql = ["cloud-sql-python-connector", "pymysql"]
gcp_postgres = ["cloud-sql-python-connector", "pg8000"]
postgres = ["psycopg2"]
seldon = ["seldon-core"]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.2"
pytest-lazy-fixture = "^0.6.3"
altair-viewer = "^0.4.0"
pytest-cov = "^3.0.0"
coverage = {extras = ["toml"], version = "^6.5.0"}
torch = "^1.13.1"
torchvision = "^0.14.1"
tabulate = "^0.9.0"
lightgbm = "^3.3.3"
xgboost = "^1.7.1"
functiontrace = "^0.3.7"
transformers = "^4.27.3"
snakeviz = "^2.1.1"
tensorflow = "2.9.0"

[tool.poetry.group.dev-lints]
optional = true

[tool.poetry.group.dev-lints.dependencies]
ruff = "^0.0.242"
sqlalchemy-stubs = "^0.4"
types-pymysql = "^1.0.19.1"
types-requests = "^2.28.11.7"
black = "22.3.0"
flake8 = "^4.0.1"
pylint = "^2.14.5"
isort = "^5.10.1"
sqlalchemy2-stubs = "0.0.2a32"
mypy = "1.0.0"
types-protobuf = "^4.21.0.3"



[tool.poetry.group.docs.dependencies]
mkdocs-material = "^9.1.7"
mkdocstrings = {extras = ["python"], version = "^0.21.2"}


[tool.poetry.scripts]
load_model_card_to_file = "opsml.scripts.load_model_card:load_model_card_to_file"
install_integration = "opsml.scripts.install_integration:install_extra_packages"
opsml-uvicorn-server = 'opsml.app.main:opsml_uvicorn_server'
opsml-gunicorn-server = 'opsml.app.main:opsml_gunicorn_server'

[tool.isort]
profile = "black"

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'

[tool.pylint.MASTER]
ignore-paths = [ "opsml/.local_tests/*","opsml/registry/sql/migration/*"]

[tool.pylint.messages_control]
max-line-length = 120
disable = [
    "too-few-public-methods",
    "design",
    "duplicate-code",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "too-many-nested-blocks",
    "unused-argument",
    "fixme",
]
extension-pkg-whitelist = [
    "pydantic"
]


[tool.flake8]
# This section is just a doc placeholder..see setup.cfg
max-complexity = 10
format = "pylint"
statistics = "True"
max-line-length = 120
# ignore non-PEP8 lints
ignore = ["E203", "W503", "W0511"]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
testpaths = ["tests"]

[tool.mypy]
# platform configuration
python_version = "3.9"
platform = "linux"
mypy_path = "stubs"
ignore_missing_imports = true
plugins = [
    "numpy.typing.mypy_plugin",
    "pydantic.mypy",
    "sqlalchemy.ext.mypy.plugin",
    "sqlmypy",
]
exclude = ["opsml/.local_tests/*", "opsml/registry/sql/query_helpers.py", "opsml/registry/sql/migration/*"]


[tool.coverage.paths]
source = ["opsml", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["opsml"]

[tool.coverage.report]
show_missing = true
fail_under = 60


[tool.ruff]
line-length = 120

# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F"]
ignore = []

# Exclude a variety of commonly ignored directories.
exclude = [
    "tests/",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "opsml/registry/sql/migration/*",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.9.
target-version = "py39"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F841","F401","F811"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[build-system]
requires = ["poetry-core>=1.2.2"]
build-backend = "poetry.core.masonry.api"

