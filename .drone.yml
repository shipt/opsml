kind: pipeline
name: test-and-build
type: docker

workspace:
  base: /usr/src/py39
  path: ${DRONE_REPO_NAME}

trigger:
  event:
    - pull_request

steps:
  - name: py39
    image: harbor.shipttech.com/apps/pyopsml/python:py3.9.16_poetry_1.3.2
    commands:
      - poetry install --all-extras --with dev
      - make test.unit
    environment:
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD

  - name: py310
    image: harbor.shipttech.com/apps/pyopsml/python:py3.10.10_poetry_1.3.2
    commands:
      - poetry install --all-extras --with dev
      - make test.unit
    environment:
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD
    # depends_on:
    #   - py39

  - name: quality-checks
    image: harbor.shipttech.com/apps/pyopsml/python:py3.9.16_poetry_1.3.2
    commands:
      - make setup.project
      - make lints.ci
    environment:
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD

  - name: code-analysis
    image: plugins/sonarqube-drone-plugin
    environment:
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD
      SONAR_HOST:
        from_secret: SONAR_HOST
      SONAR_TOKEN:
        from_secret: SONAR_TOKEN
    depends_on:
      - py39
      - py310
      - quality-checks

---
name: publish-release
kind: pipeline
type: docker
node:
  env: production
trigger:
  event:
    - tag
    - push
  branch:
    - main

steps:
  - name: py39
    when:
      event:
        - push
    image: harbor.shipttech.com/apps/pyopsml/python:py3.9.16_poetry_1.3.2
    commands:
      - poetry install --all-extras --with dev
      - make test.unit
    environment:
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD

  - name: quality-checks
    when:
      event:
        - push
    image: harbor.shipttech.com/apps/pyopsml/python:py3.9.16_poetry_1.3.2
    commands:
      - make setup.project
      - make lints.ci
    environment:
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD

  - name: code-analysis
    when:
      event:
        - push
    image: plugins/sonarqube-drone-plugin
    environment:
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_RESOLVE_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD
      SONAR_HOST:
        from_secret: SONAR_HOST
      SONAR_TOKEN:
        from_secret: SONAR_TOKEN
    depends_on:
      - py39
      - quality-checks

  - name: publish-release-candidate
    when:
      event:
        - push
    image: harbor.shipttech.com/apps/pyopsml/python:py3.9.16_poetry_1.3.2
    environment:
      POETRY_HTTP_BASIC_SHIPT_DEPLOY_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_DEPLOY_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD
    commands:
      - make prep.pre.patch
      - make publish
    depends_on:
      - py39
      - quality-checks
      - code-analysis

  - name: artifactory-poetry-publish
    when:
      event:
        - tag
    image: harbor.shipttech.com/apps/pyopsml/python:py3.9.16_poetry_1.3.2
    environment:
      POETRY_HTTP_BASIC_SHIPT_DEPLOY_USERNAME:
        from_secret: ARTIFACTORY_PYPI_USERNAME
      POETRY_HTTP_BASIC_SHIPT_DEPLOY_PASSWORD:
        from_secret: ARTIFACTORY_PYPI_PASSWORD
    commands:
      # tag events validate poetry version is equal to the tag
      # increment patch version for releases based on drone tag
      - test "v$(poetry version --short)" "=" "$DRONE_TAG"
      - make publish
