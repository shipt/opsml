"""update tables

Revision ID: fd32b1afafd5
Revises: 
Create Date: 2023-04-11 23:07:56.160420

"""
from alembic import op
from sqlalchemy import orm

from opsml_artifacts.helpers.settings import settings
from opsml_artifacts.registry.sql.sql_schema import (
    DataSchema,
    ModelSchema,
    PipelineSchema,
    ProjectSchema,
    RunSchema,
)

# revision identifiers, used by Alembic.
revision = "fd32b1afafd5"
down_revision = None
branch_labels = None
depends_on = None

REGISTRY_TABLES = [RunSchema, ModelSchema, PipelineSchema, DataSchema, ProjectSchema]


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    engine = settings.connection_client.get_engine()

    for table in REGISTRY_TABLES:
        table.__table__.create(bind=engine, checkfirst=True)

    # adjust pipeline schema
    # op.alter_column(PipelineSchema.__tablename__, "data_card_uids", new_column_name="datacard_uids")
    # op.alter_column(PipelineSchema.__tablename__, "model_card_uids", new_column_name="modelcard_uids")
    # op.alter_column(PipelineSchema.__tablename__, "experiment_card_uids", new_column_name="runcard_uids")
    #
    ## Experiment --> Runcard
    # op.rename_table("OPSML_EXPERIMENT_REGISTRY", "OPSML_RUNCARD_REGISTRY", schema=RunSchema)
    # op.alter_column(RunSchema.__tablename__, "data_card_uids", new_column_name="datacard_uids")
    # op.alter_column(RunSchema.__tablename__, "model_card_uids", new_column_name="modelcard_uids")
    # op.alter_column(RunSchema.__tablename__, "pipeline_card_uid", new_column_name="pipelinecard_uid")
    #
    ## Update Model Schema
    # op.alter_column(ModelSchema.__tablename__, "model_card_uri", new_column_name="modelcard_uri")
    # op.alter_column(ModelSchema.__tablename__, "data_card_uid", new_column_name="datacard_uid")


def downgrade() -> None:
    pass
