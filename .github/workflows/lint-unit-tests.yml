name: Unit-Test

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

jobs:

  Lints:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.5.1"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install dependencies
        run: |
            make setup.project

      - name: Lints
        run: |
            make lints.ci

  Unit-Test-py39:
    runs-on: ubuntu-latest
    needs: Lints
    strategy:
      matrix:
        python-version: ["3.9"]
        poetry-version: ["1.5.1"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install dependencies
        run: |
          make setup.project

      - name: Unit test
        run: |
          make test.unit

  Unit-Test-py310:
    runs-on: ubuntu-latest
    needs: Lints
    strategy:
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.5.1"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install dependencies
        run: |
          make setup.project

      - name: Unit test
        run: |
          make test.unit

      - name: Coverage
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
            args: >
              -Dsonar.projectKey=${{ secrets.SONAR_PROJECT }}

  Unit-Test-py311:
    runs-on: ubuntu-latest
    needs: Lints
    strategy:
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.5.1"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install dependencies
        run: |
          make setup.project

      - name: Unit test
        run: |
          make test.unit

  Publish-RC:
    runs-on: ubuntu-latest
    needs: [Unit-Test-py39, Unit-Test-py310, Unit-Test-py311]
    strategy:
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.5.1"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      
      - name: Release
        run: |
          make prep.pre.patch
          make publish


