name: Build Opsml Server Image

on:
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches:
      - main
      
jobs:
  build-gcs-310:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      env:
        PY_VER_FULL: "3.10.13"
        PY_VER_MAJOR: "3.10"
       

      strategy:
        matrix:
          storage_backend: ["gcs"]
          sql_backend: ["postgres", "mysql"]

      steps:
        - name: Check out the repo
          uses: actions/checkout@v4

        - run : cp pyproject.toml poetry.lock  docker/ 

        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: metadata
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: my-docker-hub-namespace/my-docker-hub-repository

        - run: |
            export poetry_version="v$(poetry version --short)"
            echo "VERSION_TAG=$poetry_version" >> "$GITHUB_OUTPUT"
            echo "PYPI_VERSION=$(poetry version --short)" >> "$GITHUB_OUTPUT"

        - name: Build and push Docker image
          env:
            VERSION_TAG: ${{ steps.metadata.outputs.VERSION_TAG }}
            PYPI_VERSION: ${{ steps.metadata.outputs.PYPI_VERSION }}
            
          uses: docker/build-push-action@v5
          with:
            context: .
            file: ./docker/Dockerfile
            push: true
            tags: demml/opsml:${{env.PY_VER_FULL}}_${{matrix.storage_backend}}_${{matrix.sql_backend}}_${{env.VERSION_TAG}}
            labels: ${{ steps.meta.outputs.labels }}
            build-args: |
              PY_VER_FULL=${{env.PY_VER_FULL}}
              PY_VER_MAJOR=${{env.PY_VER_MAJOR}}
              OPSML_CMD=opsml[${{matrix.storage_backend}},${{matrix.sql_backend}},server]==${{env.PYPI_VERSION}}
         